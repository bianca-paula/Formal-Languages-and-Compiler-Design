2. Syntax:

The words - predefined tokens are specified between " and ":

Sintactical rules: 

program ::= "DECLARE" decllist "END DECLARE" "PROGRAM" stmtlist "END PROGRAM"

decllist ::= declaration | declaration decllist

declaration ::= IDENTIFIER ":" type

type1 ::= "BOOL" | "CHAR" | "INTEGER" | "FLOAT" | "STRING"

arraydecl ::= type1 "[" "]"

type  ::= type1|arraydecl

stmtlist ::= stmt | stmt  stmtlist

stmt ::= simplstmt | structstmt

simplstmt ::= assignstmt | iostmt | arraystmt

assignstmt ::= IDENTIFIER ":=" expression

expression ::= expression "+" term |expression "-" term |term

term ::= term "*" factor | term "/" factor |factor

factor ::= "(" expression ")" | IDENTIFIER | constants

arraystmt = "[" identifier, identifier.....,identifier "]"

iostmt ::= "READ" | "WRITE" "(" IDENTIFIER | constants  ")"

structstmt ::= stmtlist| ifstmt | whilestmt | forstmt

ifstmt ::= "IF" "(" condition ")" "THEN" stmtlist "ELSE" stmtlist "END IF"

whilestmt ::= "WHILE" "(" condition ")" stmtlist "END WHILE"

forstmt ::= "FOR" "("  assignstmt ";" condition ";" assignstmt  ")" stmtlist "END FOR"

condition ::= expression RELATION expression

RELATION ::= "<" | "<=" | "=" | "!=" | ">=" | ">"